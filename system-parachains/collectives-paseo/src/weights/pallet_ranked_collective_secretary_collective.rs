
//! Autogenerated weights for `pallet_ranked_collective`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 50.0.0
//! DATE: 2025-10-02, STEPS: `2`, REPEAT: `1`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `paseo-weights-benchmark-2`, CPU: `QEMU Virtual CPU version 2.5+`
//! WASM-EXECUTION: `Compiled`, CHAIN: `None`, DB CACHE: 1024

// Executed Command:
// frame-omni-bencher
// v1
// benchmark
// pallet
// --runtime
// target/release/wbuild/collectives-paseo-runtime/collectives_paseo_runtime.compact.compressed.wasm
// --genesis-builder
// runtime
// --genesis-builder-preset
// local_testnet
// --all
// --exclude-pallets
// pallet_referenda
// --output
// /root/runtimes/weights/
// --steps
// 2
// --repeat
// 1

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_ranked_collective`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_ranked_collective::WeightInfo for WeightInfo<T> {
	/// Storage: `SecretaryCollective::Members` (r:1 w:1)
	/// Proof: `SecretaryCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::MemberCount` (r:1 w:1)
	/// Proof: `SecretaryCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IndexToId` (r:0 w:1)
	/// Proof: `SecretaryCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IdToIndex` (r:0 w:1)
	/// Proof: `SecretaryCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	fn add_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `3507`
		// Minimum execution time: 54_462_000 picoseconds.
		Weight::from_parts(54_462_000, 0)
			.saturating_add(Weight::from_parts(0, 3507))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `SecretaryCollective::Members` (r:1 w:1)
	/// Proof: `SecretaryCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::MemberCount` (r:11 w:11)
	/// Proof: `SecretaryCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IdToIndex` (r:11 w:22)
	/// Proof: `SecretaryCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IndexToId` (r:11 w:22)
	/// Proof: `SecretaryCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	fn remove_member(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `406 + r * (213 ±0)`
		//  Estimated: `28809`
		// Minimum execution time: 64_591_000 picoseconds.
		Weight::from_parts(283_340_000, 0)
			.saturating_add(Weight::from_parts(0, 28809))
			.saturating_add(T::DbWeight::get().reads(34))
			.saturating_add(T::DbWeight::get().writes(56))
	}
	/// Storage: `SecretaryCollective::Members` (r:1 w:1)
	/// Proof: `SecretaryCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::MemberCount` (r:1 w:1)
	/// Proof: `SecretaryCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IndexToId` (r:0 w:1)
	/// Proof: `SecretaryCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IdToIndex` (r:0 w:1)
	/// Proof: `SecretaryCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	fn promote_member(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `210 + r * (17 ±0)`
		//  Estimated: `3507`
		// Minimum execution time: 37_540_000 picoseconds.
		Weight::from_parts(38_402_000, 0)
			.saturating_add(Weight::from_parts(0, 3507))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: `SecretaryCollective::Members` (r:1 w:1)
	/// Proof: `SecretaryCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::MemberCount` (r:1 w:1)
	/// Proof: `SecretaryCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IdToIndex` (r:1 w:2)
	/// Proof: `SecretaryCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IndexToId` (r:1 w:2)
	/// Proof: `SecretaryCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	/// The range of component `r` is `[0, 10]`.
	fn demote_member(_r: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `406 + r * (71 ±0)`
		//  Estimated: `3519`
		// Minimum execution time: 50_926_000 picoseconds.
		Weight::from_parts(60_604_000, 0)
			.saturating_add(Weight::from_parts(0, 3519))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(6))
	}
	/// Storage: `SecretaryCollective::Members` (r:1 w:0)
	/// Proof: `SecretaryCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	fn vote() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `209`
		//  Estimated: `3507`
		// Minimum execution time: 22_422_000 picoseconds.
		Weight::from_parts(22_422_000, 0)
			.saturating_add(Weight::from_parts(0, 3507))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: `SecretaryCollective::VotingCleanup` (r:1 w:0)
	/// Proof: `SecretaryCollective::VotingCleanup` (`max_values`: None, `max_size`: Some(114), added: 2589, mode: `MaxEncodedLen`)
	/// The range of component `n` is `[0, 100]`.
	/// The range of component `n` is `[0, 100]`.
	/// The range of component `n` is `[0, 100]`.
	fn cleanup_poll(_n: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42 + n * (6 ±0)`
		//  Estimated: `3579`
		// Minimum execution time: 25_508_000 picoseconds.
		Weight::from_parts(36_648_000, 0)
			.saturating_add(Weight::from_parts(0, 3579))
			.saturating_add(T::DbWeight::get().reads(1))
	}
	/// Storage: `SecretaryCollective::Members` (r:2 w:2)
	/// Proof: `SecretaryCollective::Members` (`max_values`: None, `max_size`: Some(42), added: 2517, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::MemberCount` (r:2 w:2)
	/// Proof: `SecretaryCollective::MemberCount` (`max_values`: None, `max_size`: Some(14), added: 2489, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IdToIndex` (r:2 w:4)
	/// Proof: `SecretaryCollective::IdToIndex` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	/// Storage: `SecretarySalary::Claimant` (r:2 w:2)
	/// Proof: `SecretarySalary::Claimant` (`max_values`: None, `max_size`: Some(86), added: 2561, mode: `MaxEncodedLen`)
	/// Storage: `SecretaryCollective::IndexToId` (r:0 w:2)
	/// Proof: `SecretaryCollective::IndexToId` (`max_values`: None, `max_size`: Some(54), added: 2529, mode: `MaxEncodedLen`)
	fn exchange_member() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `446`
		//  Estimated: `6112`
		// Minimum execution time: 162_855_000 picoseconds.
		Weight::from_parts(162_855_000, 0)
			.saturating_add(Weight::from_parts(0, 6112))
			.saturating_add(T::DbWeight::get().reads(8))
			.saturating_add(T::DbWeight::get().writes(12))
	}
}
